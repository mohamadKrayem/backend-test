{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","style","marginLeft","baseUrl","newObject","axios","post","then","response","data","id","put","Notification","message","Footer","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","get","res","notesToShow","filter","map","console","log","find","n","changedNote","noteService","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","placeholder","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAMF,EAAKG,UAAY,qBAAqB,iBAClD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAkBM,MAAO,CAACC,WAAW,OAAtD,SAA+DN,Q,gBCN/DO,EAAU,aAgBD,EATF,SAAAC,GAEZ,OADcC,IAAMC,KAAKH,EAASC,GACnBG,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAOzB,EAJF,SAACC,EAAIN,GAEjB,OADcC,IAAMM,IAAN,UAAaR,EAAb,YAAwBO,GAAMN,GAC7BG,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SCHzBG,EAZK,SAAC,GAAe,IAAbC,EAAY,EAAZA,QACtB,OAAa,OAAVA,EACK,KAIP,qBAAKf,UAAU,QAAf,SACEe,KCOWC,EAdD,WAMb,OACC,sBAAKb,MANY,CACjBc,MAAM,QACNC,UAAW,SACXC,SAAS,IAGT,UACK,uBACA,2GCqFQC,EAvFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRvB,IACGwB,IAAI,mCACJtB,MAAK,SAAAuB,GACJT,EAASS,EAAIrB,WAEhB,IAEH,IAuCMsB,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAAtC,GAAI,OAAIA,EAAKG,aAKhE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcgB,QAASa,IACvB,8BACE,yBAAQ1B,QAAS,kBAAMyB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAIlC,6BACGO,EAAYE,KAAI,SAAAvC,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAxDhC,SAAAe,GACxBwB,QAAQC,IAAIf,GACZ,IAAM1B,EAAM0B,EAAMgB,MAAK,SAAAC,GAAC,OAAEA,EAAE3B,KAAKA,KAC3B4B,EAAY,2BAAK5C,GAAN,IAAYG,WAAYH,EAAKG,YAE9C0C,EACQ7B,EAAI4B,GACX/B,MAAK,SAAAC,GACJ0B,QAAQC,IAAI,cAAe3B,GAC3Ba,EAASD,EAAMa,KAAI,SAAAvC,GAAI,OAAEA,EAAKgB,KAAKA,EAAGhB,EAAKc,SAE5CgC,OAAM,SAAAC,GACLd,EAAgB,aAAD,OACAjC,EAAKK,QADL,sCAGf2C,YAAW,WAAKf,EAAgB,QAAQ,KACxCN,EAASD,EAAMY,QAAO,SAAAK,GAAC,OAAIA,EAAE3B,KAAMA,SAwCuBiC,CAAmBjD,EAAKgB,MAAnEhB,EAAKgB,SAGpB,uBAAMkC,SAtCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASuB,EACT0B,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,GAC3B1C,GAAIU,EAAMiC,OAAS,GAGrBd,EAAmBQ,GAChBxC,MAAK,SAAAC,GAAY0B,QAAQC,IAAI,eAAe3B,GAE3Ca,EAASD,EAAMkC,OAAO9C,IACtBe,EAAW,QAyBb,UACE,uBACEgC,YAAY,iBACZC,MAAOlC,EACPmC,SAtBiB,SAACZ,GACxBtB,EAAWsB,EAAMa,OAAOF,UAuBpB,wBAAQG,KAAK,SAAb,kBAEA,cAAC,EAAD,W,MCpFRC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c191a52.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label=note.important ? 'make not important':'make important';\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance} style={{marginLeft:\"5px\"}}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll=()=>{\r\n\tconst request = axios.get(baseUrl);\r\n\treturn request.then(response=>response.data);\r\n}\r\n\r\nconst create=newObject=> {\r\n\tconst request=axios.post(baseUrl, newObject);\r\n\treturn request.then(response=>response.data);\r\n}\r\n\r\nconst update=(id, newObject)=> {\r\n\tconst request=axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then(response=>response.data);\r\n}\r\nexport default {getAll,create,update}","const Notification =({ message })=>{\r\n\tif(message===null){\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='error'>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification;\r\n","const Footer =()=>{\r\n\tconst footerStyle={\r\n\t\tcolor:'green',\r\n\t\tfontStyle: 'italic',\r\n\t\tfontSize:16\r\n\t}\r\n\treturn(\r\n\t\t<div style={footerStyle}>\r\n\t      <br />\r\n\t      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n\t    </div>\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\nimport Note from './components/Note';\r\nimport noteService from './services/notes';\r\nimport Notification from './components/Notification';\r\nimport Footer from './components/Footer';\r\nimport axios from 'axios';\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n  useEffect(()=>{\r\n    axios\r\n      .get('http://localhost:3000/api/notes')\r\n      .then(res=>{\r\n        setNotes(res.data)\r\n      })\r\n  }, [])\r\n\r\n  const toggleImportanceOf =id=>{\r\n    console.log(notes);\r\n    const note= notes.find(n=>n.id===id);\r\n    const changedNote={ ...note, important: !note.important };\r\n\r\n    noteService\r\n    .update(id, changedNote)\r\n    .then(response=>{\r\n      console.log('putResponse', response)\r\n      setNotes(notes.map(note=>note.id!==id?note:response));\r\n    })\r\n    .catch(error=>{\r\n      setErrorMessage(\r\n        `the note '${note.content}' was already deleted from server`\r\n      )\r\n      setTimeout(()=>{setErrorMessage(null)}, 5000)\r\n      setNotes(notes.filter(n => n.id !==id))\r\n    })\r\n\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n      id: notes.length + 1\r\n    }\r\n\r\n    noteService.create(noteObject)\r\n      .then(response =>{console.log('postResponse',response)\r\n\r\n        setNotes(notes.concat(response));\r\n        setNewNote('');\r\n      })\r\n\r\n  }\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note key={note.id} note={note} toggleImportance={()=>toggleImportanceOf(note.id)}/>\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          placeholder=\"add a new note\"\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n\r\n        <Footer />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}